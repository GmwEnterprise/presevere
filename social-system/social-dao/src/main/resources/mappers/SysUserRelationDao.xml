<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.persevere.project.socialsys.dao.SysUserRelationDao">
  <resultMap id="BaseResultMap" type="me.persevere.project.socialsys.domain.SysUserRelation">
    <id column="sys_user_relation_id" jdbcType="INTEGER" property="id" />
    <result column="sys_user_relation_from_user" jdbcType="INTEGER" property="fromUser" />
    <result column="sys_user_relation_to_user" jdbcType="INTEGER" property="toUser" />
    <result column="sys_user_relation_behavior" jdbcType="TINYINT" property="behavior" />
    <result column="sys_user_relation_result" jdbcType="TINYINT" property="result" />
    <result column="sys_user_relation_build_time" jdbcType="TIMESTAMP" property="buildTime" />
  </resultMap>
  <sql id="Base_Column_List">
    sys_user_relation.id as sys_user_relation_id, sys_user_relation.from_user as sys_user_relation_from_user, 
    sys_user_relation.to_user as sys_user_relation_to_user, sys_user_relation.behavior as sys_user_relation_behavior, 
    sys_user_relation.`result` as `sys_user_relation_result`, sys_user_relation.build_time as sys_user_relation_build_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user_relation sys_user_relation
    where sys_user_relation.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_user_relation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="me.persevere.project.socialsys.domain.SysUserRelation" useGeneratedKeys="true">
    insert into sys_user_relation (from_user, to_user, behavior, 
      `result`, build_time)
    values (#{fromUser,jdbcType=INTEGER}, #{toUser,jdbcType=INTEGER}, #{behavior,jdbcType=TINYINT}, 
      #{result,jdbcType=TINYINT}, #{buildTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="me.persevere.project.socialsys.domain.SysUserRelation" useGeneratedKeys="true">
    insert into sys_user_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fromUser != null">
        from_user,
      </if>
      <if test="toUser != null">
        to_user,
      </if>
      <if test="behavior != null">
        behavior,
      </if>
      <if test="result != null">
        `result`,
      </if>
      <if test="buildTime != null">
        build_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fromUser != null">
        #{fromUser,jdbcType=INTEGER},
      </if>
      <if test="toUser != null">
        #{toUser,jdbcType=INTEGER},
      </if>
      <if test="behavior != null">
        #{behavior,jdbcType=TINYINT},
      </if>
      <if test="result != null">
        #{result,jdbcType=TINYINT},
      </if>
      <if test="buildTime != null">
        #{buildTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="me.persevere.project.socialsys.domain.SysUserRelation">
    update sys_user_relation
    <set>
      <if test="fromUser != null">
        from_user = #{fromUser,jdbcType=INTEGER},
      </if>
      <if test="toUser != null">
        to_user = #{toUser,jdbcType=INTEGER},
      </if>
      <if test="behavior != null">
        behavior = #{behavior,jdbcType=TINYINT},
      </if>
      <if test="result != null">
        `result` = #{result,jdbcType=TINYINT},
      </if>
      <if test="buildTime != null">
        build_time = #{buildTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="me.persevere.project.socialsys.domain.SysUserRelation">
    update sys_user_relation
    set from_user = #{fromUser,jdbcType=INTEGER},
      to_user = #{toUser,jdbcType=INTEGER},
      behavior = #{behavior,jdbcType=TINYINT},
      `result` = #{result,jdbcType=TINYINT},
      build_time = #{buildTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>